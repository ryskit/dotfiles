# alias
alias vi='nvim'
alias vim='nvim'
alias rm='rm -i'
alias g='cd $(ghq root)/$(ghq list | peco)'
alias gh='hub browse $(ghq list | peco | cut -d "/" -f 2,3)'
alias hubb='hub browse'

# --------------------
# Git Ariases
# --------------------
export GIT_EDITOR="nvim"
alias ga='git add'
alias gaa='git add .'
alias gaaa='git add -A'
alias gb='git branch'
alias gbd='git branch -d '
alias gba='git branch -a'
alias gc='git commit'
alias gcm='git commit -m'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gd='git diff'
alias gl='git log'
alias glg='git log --graph --oneline --decorate --all'
alias gld='git log --pretty=format:"%h %ad %s" --date=short --all'
alias gf='git fetch'
alias gs='git status'
alias gss='git status -s'
alias gcnfl='git config -l'

# export
export PATH=/usr/local/sbin:$PATH
export PATH=/usr/local/bin:$PATH

# classmethod
if [ -d $HOME/.anyenv ] ; then
    export PATH="$HOME/.anyenv/bin:$PATH"
    eval "$(anyenv init -)"
fi
export PATH="/usr/local/opt/ncurses/bin:$PATH"
export GO_VERSION=1.11.2
export GOPATH=$HOME/dev
eval "$(rbenv init - zsh)"
eval "$(goenv init -)"
export PATH="$HOME/.composer/vendor/bin:$PATH"
export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
export TERM="xterm-256color"

source ~/.cargo/env

# anyenv
export PATH="$HOME/.anyenv/bin:$PATH"

# direnv
eval "$(direnv hook zsh)"

# zsh setting
if [[ ! -d ~/.zplug ]];then
  git clone https://github.com/zplug/zplug ~/.zplug
fi

source ~/.zplug/init.zsh
zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme
zplug install
zplug load

autoload -Uz colors
colors
autoload -Uz compinit
compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' ignore-parents parent pwd ..
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
/usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'
setopt print_eight_bit
setopt auto_cd
setopt extended_glob

bindkey '^]' peco-src
function peco-src() {
  local src=$(ghq list --full-path | peco --query "$LBUFFER")
  if [ -n "$src" ]; then
    BUFFER="cd $src"
    zle accept-line
  fi
  zle -R -c
}
zle -N peco-src

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/ryskit/.sdkman"
[[ -s "/Users/ryskit/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/ryskit/.sdkman/bin/sdkman-init.sh"
